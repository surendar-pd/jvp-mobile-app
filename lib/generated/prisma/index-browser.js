
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.8.1
 * Query Engine version: 2060c79ba17c6bb9f5823312b6f6b7f4a845738e
 */
Prisma.prismaVersion = {
  client: "6.8.1",
  engine: "2060c79ba17c6bb9f5823312b6f6b7f4a845738e"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.Directus_accessScalarFieldEnum = {
  id: 'id',
  role: 'role',
  user: 'user',
  policy: 'policy',
  sort: 'sort'
};

exports.Prisma.Directus_activityScalarFieldEnum = {
  id: 'id',
  action: 'action',
  user: 'user',
  timestamp: 'timestamp',
  ip: 'ip',
  user_agent: 'user_agent',
  collection: 'collection',
  item: 'item',
  origin: 'origin'
};

exports.Prisma.Directus_collectionsScalarFieldEnum = {
  collection: 'collection',
  icon: 'icon',
  note: 'note',
  display_template: 'display_template',
  hidden: 'hidden',
  singleton: 'singleton',
  translations: 'translations',
  archive_field: 'archive_field',
  archive_app_filter: 'archive_app_filter',
  archive_value: 'archive_value',
  unarchive_value: 'unarchive_value',
  sort_field: 'sort_field',
  accountability: 'accountability',
  color: 'color',
  item_duplication_fields: 'item_duplication_fields',
  sort: 'sort',
  group: 'group',
  collapse: 'collapse',
  preview_url: 'preview_url',
  versioning: 'versioning'
};

exports.Prisma.Directus_commentsScalarFieldEnum = {
  id: 'id',
  collection: 'collection',
  item: 'item',
  comment: 'comment',
  date_created: 'date_created',
  date_updated: 'date_updated',
  user_created: 'user_created',
  user_updated: 'user_updated'
};

exports.Prisma.Directus_dashboardsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  icon: 'icon',
  note: 'note',
  date_created: 'date_created',
  user_created: 'user_created',
  color: 'color'
};

exports.Prisma.Directus_extensionsScalarFieldEnum = {
  enabled: 'enabled',
  id: 'id',
  folder: 'folder',
  source: 'source',
  bundle: 'bundle'
};

exports.Prisma.Directus_fieldsScalarFieldEnum = {
  id: 'id',
  collection: 'collection',
  field: 'field',
  special: 'special',
  interface: 'interface',
  options: 'options',
  display: 'display',
  display_options: 'display_options',
  readonly: 'readonly',
  hidden: 'hidden',
  sort: 'sort',
  width: 'width',
  translations: 'translations',
  note: 'note',
  conditions: 'conditions',
  required: 'required',
  group: 'group',
  validation: 'validation',
  validation_message: 'validation_message'
};

exports.Prisma.Directus_filesScalarFieldEnum = {
  id: 'id',
  storage: 'storage',
  filename_disk: 'filename_disk',
  filename_download: 'filename_download',
  title: 'title',
  type: 'type',
  folder: 'folder',
  uploaded_by: 'uploaded_by',
  created_on: 'created_on',
  modified_by: 'modified_by',
  modified_on: 'modified_on',
  charset: 'charset',
  filesize: 'filesize',
  width: 'width',
  height: 'height',
  duration: 'duration',
  embed: 'embed',
  description: 'description',
  location: 'location',
  tags: 'tags',
  metadata: 'metadata',
  focal_point_x: 'focal_point_x',
  focal_point_y: 'focal_point_y',
  tus_id: 'tus_id',
  tus_data: 'tus_data',
  uploaded_on: 'uploaded_on'
};

exports.Prisma.Directus_flowsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  icon: 'icon',
  color: 'color',
  description: 'description',
  status: 'status',
  trigger: 'trigger',
  accountability: 'accountability',
  options: 'options',
  operation: 'operation',
  date_created: 'date_created',
  user_created: 'user_created'
};

exports.Prisma.Directus_foldersScalarFieldEnum = {
  id: 'id',
  name: 'name',
  parent: 'parent'
};

exports.Prisma.Directus_migrationsScalarFieldEnum = {
  version: 'version',
  name: 'name',
  timestamp: 'timestamp'
};

exports.Prisma.Directus_notificationsScalarFieldEnum = {
  id: 'id',
  timestamp: 'timestamp',
  status: 'status',
  recipient: 'recipient',
  sender: 'sender',
  subject: 'subject',
  message: 'message',
  collection: 'collection',
  item: 'item'
};

exports.Prisma.Directus_operationsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  key: 'key',
  type: 'type',
  position_x: 'position_x',
  position_y: 'position_y',
  options: 'options',
  resolve: 'resolve',
  reject: 'reject',
  flow: 'flow',
  date_created: 'date_created',
  user_created: 'user_created'
};

exports.Prisma.Directus_panelsScalarFieldEnum = {
  id: 'id',
  dashboard: 'dashboard',
  name: 'name',
  icon: 'icon',
  color: 'color',
  show_header: 'show_header',
  note: 'note',
  type: 'type',
  position_x: 'position_x',
  position_y: 'position_y',
  width: 'width',
  height: 'height',
  options: 'options',
  date_created: 'date_created',
  user_created: 'user_created'
};

exports.Prisma.Directus_permissionsScalarFieldEnum = {
  id: 'id',
  collection: 'collection',
  action: 'action',
  permissions: 'permissions',
  validation: 'validation',
  presets: 'presets',
  fields: 'fields',
  policy: 'policy'
};

exports.Prisma.Directus_policiesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  icon: 'icon',
  description: 'description',
  ip_access: 'ip_access',
  enforce_tfa: 'enforce_tfa',
  admin_access: 'admin_access',
  app_access: 'app_access'
};

exports.Prisma.Directus_presetsScalarFieldEnum = {
  id: 'id',
  bookmark: 'bookmark',
  user: 'user',
  role: 'role',
  collection: 'collection',
  search: 'search',
  layout: 'layout',
  layout_query: 'layout_query',
  layout_options: 'layout_options',
  refresh_interval: 'refresh_interval',
  filter: 'filter',
  icon: 'icon',
  color: 'color'
};

exports.Prisma.Directus_relationsScalarFieldEnum = {
  id: 'id',
  many_collection: 'many_collection',
  many_field: 'many_field',
  one_collection: 'one_collection',
  one_field: 'one_field',
  one_collection_field: 'one_collection_field',
  one_allowed_collections: 'one_allowed_collections',
  junction_field: 'junction_field',
  sort_field: 'sort_field',
  one_deselect_action: 'one_deselect_action'
};

exports.Prisma.Directus_revisionsScalarFieldEnum = {
  id: 'id',
  activity: 'activity',
  collection: 'collection',
  item: 'item',
  data: 'data',
  delta: 'delta',
  parent: 'parent',
  version: 'version'
};

exports.Prisma.Directus_rolesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  icon: 'icon',
  description: 'description',
  parent: 'parent'
};

exports.Prisma.Directus_sessionsScalarFieldEnum = {
  token: 'token',
  user: 'user',
  expires: 'expires',
  ip: 'ip',
  user_agent: 'user_agent',
  share: 'share',
  origin: 'origin',
  next_token: 'next_token'
};

exports.Prisma.Directus_settingsScalarFieldEnum = {
  id: 'id',
  project_name: 'project_name',
  project_url: 'project_url',
  project_color: 'project_color',
  project_logo: 'project_logo',
  public_foreground: 'public_foreground',
  public_background: 'public_background',
  public_note: 'public_note',
  auth_login_attempts: 'auth_login_attempts',
  auth_password_policy: 'auth_password_policy',
  storage_asset_transform: 'storage_asset_transform',
  storage_asset_presets: 'storage_asset_presets',
  custom_css: 'custom_css',
  storage_default_folder: 'storage_default_folder',
  basemaps: 'basemaps',
  mapbox_key: 'mapbox_key',
  module_bar: 'module_bar',
  project_descriptor: 'project_descriptor',
  default_language: 'default_language',
  custom_aspect_ratios: 'custom_aspect_ratios',
  public_favicon: 'public_favicon',
  default_appearance: 'default_appearance',
  default_theme_light: 'default_theme_light',
  theme_light_overrides: 'theme_light_overrides',
  default_theme_dark: 'default_theme_dark',
  theme_dark_overrides: 'theme_dark_overrides',
  report_error_url: 'report_error_url',
  report_bug_url: 'report_bug_url',
  report_feature_url: 'report_feature_url',
  public_registration: 'public_registration',
  public_registration_verify_email: 'public_registration_verify_email',
  public_registration_role: 'public_registration_role',
  public_registration_email_filter: 'public_registration_email_filter',
  visual_editor_urls: 'visual_editor_urls'
};

exports.Prisma.Directus_sharesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  collection: 'collection',
  item: 'item',
  role: 'role',
  password: 'password',
  user_created: 'user_created',
  date_created: 'date_created',
  date_start: 'date_start',
  date_end: 'date_end',
  times_used: 'times_used',
  max_uses: 'max_uses'
};

exports.Prisma.Directus_translationsScalarFieldEnum = {
  id: 'id',
  language: 'language',
  key: 'key',
  value: 'value'
};

exports.Prisma.Directus_usersScalarFieldEnum = {
  id: 'id',
  first_name: 'first_name',
  last_name: 'last_name',
  email: 'email',
  password: 'password',
  location: 'location',
  title: 'title',
  description: 'description',
  tags: 'tags',
  avatar: 'avatar',
  language: 'language',
  tfa_secret: 'tfa_secret',
  status: 'status',
  role: 'role',
  token: 'token',
  last_access: 'last_access',
  last_page: 'last_page',
  provider: 'provider',
  external_identifier: 'external_identifier',
  auth_data: 'auth_data',
  email_notifications: 'email_notifications',
  appearance: 'appearance',
  theme_dark: 'theme_dark',
  theme_light: 'theme_light',
  theme_light_overrides: 'theme_light_overrides',
  theme_dark_overrides: 'theme_dark_overrides'
};

exports.Prisma.Directus_versionsScalarFieldEnum = {
  id: 'id',
  key: 'key',
  name: 'name',
  collection: 'collection',
  item: 'item',
  hash: 'hash',
  date_created: 'date_created',
  date_updated: 'date_updated',
  user_created: 'user_created',
  user_updated: 'user_updated',
  delta: 'delta'
};

exports.Prisma.Directus_webhooksScalarFieldEnum = {
  id: 'id',
  name: 'name',
  method: 'method',
  url: 'url',
  status: 'status',
  data: 'data',
  actions: 'actions',
  collections: 'collections',
  headers: 'headers',
  was_active_before_deprecation: 'was_active_before_deprecation',
  migrated_flow: 'migrated_flow'
};

exports.Prisma.UsersScalarFieldEnum = {
  id: 'id',
  date_created: 'date_created',
  date_updated: 'date_updated',
  name: 'name',
  email: 'email',
  password: 'password'
};

exports.Prisma.Medication_historyScalarFieldEnum = {
  id: 'id',
  date_created: 'date_created',
  date_updated: 'date_updated',
  medication_name: 'medication_name',
  frequency: 'frequency',
  recorded_at: 'recorded_at',
  dosage: 'dosage',
  patient_id: 'patient_id'
};

exports.Prisma.Patient_vitalsScalarFieldEnum = {
  id: 'id',
  date_created: 'date_created',
  date_updated: 'date_updated',
  height_cm: 'height_cm',
  weight_kg: 'weight_kg',
  recorded_at: 'recorded_at',
  patient_id: 'patient_id'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  emailVerified: 'emailVerified',
  image: 'image',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SessionScalarFieldEnum = {
  id: 'id',
  expiresAt: 'expiresAt',
  token: 'token',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  userId: 'userId'
};

exports.Prisma.AccountScalarFieldEnum = {
  id: 'id',
  accountId: 'accountId',
  providerId: 'providerId',
  userId: 'userId',
  accessToken: 'accessToken',
  refreshToken: 'refreshToken',
  idToken: 'idToken',
  accessTokenExpiresAt: 'accessTokenExpiresAt',
  refreshTokenExpiresAt: 'refreshTokenExpiresAt',
  scope: 'scope',
  password: 'password',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.VerificationScalarFieldEnum = {
  id: 'id',
  identifier: 'identifier',
  value: 'value',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.directus_accessOrderByRelevanceFieldEnum = {
  id: 'id',
  role: 'role',
  user: 'user',
  policy: 'policy'
};

exports.Prisma.directus_activityOrderByRelevanceFieldEnum = {
  action: 'action',
  user: 'user',
  ip: 'ip',
  user_agent: 'user_agent',
  collection: 'collection',
  item: 'item',
  origin: 'origin'
};

exports.Prisma.directus_collectionsOrderByRelevanceFieldEnum = {
  collection: 'collection',
  icon: 'icon',
  note: 'note',
  display_template: 'display_template',
  translations: 'translations',
  archive_field: 'archive_field',
  archive_value: 'archive_value',
  unarchive_value: 'unarchive_value',
  sort_field: 'sort_field',
  accountability: 'accountability',
  color: 'color',
  item_duplication_fields: 'item_duplication_fields',
  group: 'group',
  collapse: 'collapse',
  preview_url: 'preview_url'
};

exports.Prisma.directus_commentsOrderByRelevanceFieldEnum = {
  id: 'id',
  collection: 'collection',
  item: 'item',
  comment: 'comment',
  user_created: 'user_created',
  user_updated: 'user_updated'
};

exports.Prisma.directus_dashboardsOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  icon: 'icon',
  note: 'note',
  user_created: 'user_created',
  color: 'color'
};

exports.Prisma.directus_extensionsOrderByRelevanceFieldEnum = {
  id: 'id',
  folder: 'folder',
  source: 'source',
  bundle: 'bundle'
};

exports.Prisma.directus_fieldsOrderByRelevanceFieldEnum = {
  collection: 'collection',
  field: 'field',
  special: 'special',
  interface: 'interface',
  options: 'options',
  display: 'display',
  display_options: 'display_options',
  width: 'width',
  translations: 'translations',
  note: 'note',
  conditions: 'conditions',
  group: 'group',
  validation: 'validation',
  validation_message: 'validation_message'
};

exports.Prisma.directus_filesOrderByRelevanceFieldEnum = {
  id: 'id',
  storage: 'storage',
  filename_disk: 'filename_disk',
  filename_download: 'filename_download',
  title: 'title',
  type: 'type',
  folder: 'folder',
  uploaded_by: 'uploaded_by',
  modified_by: 'modified_by',
  charset: 'charset',
  embed: 'embed',
  description: 'description',
  location: 'location',
  tags: 'tags',
  metadata: 'metadata',
  tus_id: 'tus_id',
  tus_data: 'tus_data'
};

exports.Prisma.directus_flowsOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  icon: 'icon',
  color: 'color',
  description: 'description',
  status: 'status',
  trigger: 'trigger',
  accountability: 'accountability',
  options: 'options',
  operation: 'operation',
  user_created: 'user_created'
};

exports.Prisma.directus_foldersOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  parent: 'parent'
};

exports.Prisma.directus_migrationsOrderByRelevanceFieldEnum = {
  version: 'version',
  name: 'name'
};

exports.Prisma.directus_notificationsOrderByRelevanceFieldEnum = {
  status: 'status',
  recipient: 'recipient',
  sender: 'sender',
  subject: 'subject',
  message: 'message',
  collection: 'collection',
  item: 'item'
};

exports.Prisma.directus_operationsOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  key: 'key',
  type: 'type',
  options: 'options',
  resolve: 'resolve',
  reject: 'reject',
  flow: 'flow',
  user_created: 'user_created'
};

exports.Prisma.directus_panelsOrderByRelevanceFieldEnum = {
  id: 'id',
  dashboard: 'dashboard',
  name: 'name',
  icon: 'icon',
  color: 'color',
  note: 'note',
  type: 'type',
  options: 'options',
  user_created: 'user_created'
};

exports.Prisma.directus_permissionsOrderByRelevanceFieldEnum = {
  collection: 'collection',
  action: 'action',
  permissions: 'permissions',
  validation: 'validation',
  presets: 'presets',
  fields: 'fields',
  policy: 'policy'
};

exports.Prisma.directus_policiesOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  icon: 'icon',
  description: 'description',
  ip_access: 'ip_access'
};

exports.Prisma.directus_presetsOrderByRelevanceFieldEnum = {
  bookmark: 'bookmark',
  user: 'user',
  role: 'role',
  collection: 'collection',
  search: 'search',
  layout: 'layout',
  layout_query: 'layout_query',
  layout_options: 'layout_options',
  filter: 'filter',
  icon: 'icon',
  color: 'color'
};

exports.Prisma.directus_relationsOrderByRelevanceFieldEnum = {
  many_collection: 'many_collection',
  many_field: 'many_field',
  one_collection: 'one_collection',
  one_field: 'one_field',
  one_collection_field: 'one_collection_field',
  one_allowed_collections: 'one_allowed_collections',
  junction_field: 'junction_field',
  sort_field: 'sort_field',
  one_deselect_action: 'one_deselect_action'
};

exports.Prisma.directus_revisionsOrderByRelevanceFieldEnum = {
  collection: 'collection',
  item: 'item',
  data: 'data',
  delta: 'delta',
  version: 'version'
};

exports.Prisma.directus_rolesOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  icon: 'icon',
  description: 'description',
  parent: 'parent'
};

exports.Prisma.directus_sessionsOrderByRelevanceFieldEnum = {
  token: 'token',
  user: 'user',
  ip: 'ip',
  user_agent: 'user_agent',
  share: 'share',
  origin: 'origin',
  next_token: 'next_token'
};

exports.Prisma.directus_settingsOrderByRelevanceFieldEnum = {
  project_name: 'project_name',
  project_url: 'project_url',
  project_color: 'project_color',
  project_logo: 'project_logo',
  public_foreground: 'public_foreground',
  public_background: 'public_background',
  public_note: 'public_note',
  auth_password_policy: 'auth_password_policy',
  storage_asset_transform: 'storage_asset_transform',
  storage_asset_presets: 'storage_asset_presets',
  custom_css: 'custom_css',
  storage_default_folder: 'storage_default_folder',
  basemaps: 'basemaps',
  mapbox_key: 'mapbox_key',
  module_bar: 'module_bar',
  project_descriptor: 'project_descriptor',
  default_language: 'default_language',
  custom_aspect_ratios: 'custom_aspect_ratios',
  public_favicon: 'public_favicon',
  default_appearance: 'default_appearance',
  default_theme_light: 'default_theme_light',
  theme_light_overrides: 'theme_light_overrides',
  default_theme_dark: 'default_theme_dark',
  theme_dark_overrides: 'theme_dark_overrides',
  report_error_url: 'report_error_url',
  report_bug_url: 'report_bug_url',
  report_feature_url: 'report_feature_url',
  public_registration_role: 'public_registration_role',
  public_registration_email_filter: 'public_registration_email_filter',
  visual_editor_urls: 'visual_editor_urls'
};

exports.Prisma.directus_sharesOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  collection: 'collection',
  item: 'item',
  role: 'role',
  password: 'password',
  user_created: 'user_created'
};

exports.Prisma.directus_translationsOrderByRelevanceFieldEnum = {
  id: 'id',
  language: 'language',
  key: 'key',
  value: 'value'
};

exports.Prisma.directus_usersOrderByRelevanceFieldEnum = {
  id: 'id',
  first_name: 'first_name',
  last_name: 'last_name',
  email: 'email',
  password: 'password',
  location: 'location',
  title: 'title',
  description: 'description',
  tags: 'tags',
  avatar: 'avatar',
  language: 'language',
  tfa_secret: 'tfa_secret',
  status: 'status',
  role: 'role',
  token: 'token',
  last_page: 'last_page',
  provider: 'provider',
  external_identifier: 'external_identifier',
  auth_data: 'auth_data',
  appearance: 'appearance',
  theme_dark: 'theme_dark',
  theme_light: 'theme_light',
  theme_light_overrides: 'theme_light_overrides',
  theme_dark_overrides: 'theme_dark_overrides'
};

exports.Prisma.directus_versionsOrderByRelevanceFieldEnum = {
  id: 'id',
  key: 'key',
  name: 'name',
  collection: 'collection',
  item: 'item',
  hash: 'hash',
  user_created: 'user_created',
  user_updated: 'user_updated',
  delta: 'delta'
};

exports.Prisma.directus_webhooksOrderByRelevanceFieldEnum = {
  name: 'name',
  method: 'method',
  url: 'url',
  status: 'status',
  actions: 'actions',
  collections: 'collections',
  headers: 'headers',
  migrated_flow: 'migrated_flow'
};

exports.Prisma.usersOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  password: 'password'
};

exports.Prisma.medication_historyOrderByRelevanceFieldEnum = {
  id: 'id',
  medication_name: 'medication_name',
  frequency: 'frequency',
  patient_id: 'patient_id'
};

exports.Prisma.patient_vitalsOrderByRelevanceFieldEnum = {
  id: 'id',
  patient_id: 'patient_id'
};

exports.Prisma.UserOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  image: 'image'
};

exports.Prisma.SessionOrderByRelevanceFieldEnum = {
  id: 'id',
  token: 'token',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  userId: 'userId'
};

exports.Prisma.AccountOrderByRelevanceFieldEnum = {
  id: 'id',
  accountId: 'accountId',
  providerId: 'providerId',
  userId: 'userId',
  accessToken: 'accessToken',
  refreshToken: 'refreshToken',
  idToken: 'idToken',
  scope: 'scope',
  password: 'password'
};

exports.Prisma.VerificationOrderByRelevanceFieldEnum = {
  id: 'id',
  identifier: 'identifier',
  value: 'value'
};


exports.Prisma.ModelName = {
  directus_access: 'directus_access',
  directus_activity: 'directus_activity',
  directus_collections: 'directus_collections',
  directus_comments: 'directus_comments',
  directus_dashboards: 'directus_dashboards',
  directus_extensions: 'directus_extensions',
  directus_fields: 'directus_fields',
  directus_files: 'directus_files',
  directus_flows: 'directus_flows',
  directus_folders: 'directus_folders',
  directus_migrations: 'directus_migrations',
  directus_notifications: 'directus_notifications',
  directus_operations: 'directus_operations',
  directus_panels: 'directus_panels',
  directus_permissions: 'directus_permissions',
  directus_policies: 'directus_policies',
  directus_presets: 'directus_presets',
  directus_relations: 'directus_relations',
  directus_revisions: 'directus_revisions',
  directus_roles: 'directus_roles',
  directus_sessions: 'directus_sessions',
  directus_settings: 'directus_settings',
  directus_shares: 'directus_shares',
  directus_translations: 'directus_translations',
  directus_users: 'directus_users',
  directus_versions: 'directus_versions',
  directus_webhooks: 'directus_webhooks',
  users: 'users',
  medication_history: 'medication_history',
  patient_vitals: 'patient_vitals',
  User: 'User',
  Session: 'Session',
  Account: 'Account',
  Verification: 'Verification'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
